{"version":3,"sources":["components/Main/Profile/Profile.module.css","components/Main/Dialogs/Dialogs.module.css","components/Main/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Main/Main.module.css","components/Main/News/News.module.css","components/Main/Music/Music.module.css","components/Main/Settings/Settings.module.css","serviceWorker.js","components/Header/Header.js","components/Main/Navbar/Navbar.jsx","components/Main/Profile/ProfileInfo/ProfileInfo.jsx","components/Main/Profile/Posts/Post.jsx","state/profile-reducer.js","components/Main/Profile/Posts/Posts.jsx","components/Main/Profile/ProfileImage/ProfileImage.jsx","components/Main/Profile/Profile.jsx","components/Main/Dialogs/DialogsItem.jsx","components/Main/Dialogs/MessageItem.jsx","state/message-reducer.js","components/Main/Dialogs/Dialogs.jsx","components/Main/News/News.jsx","components/Main/Music/Music.jsx","components/Main/Settings/Settings.jsx","components/Main/Main.jsx","App.js","state/redux-store.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","s","container","header","src","alt","Navbar","to","activeClassName","active","ProfileInfo","info","photo","about","Post","props","posts","message","likes","initialState","postData","id","likesCount","newPostText","profileReducer","state","action","type","post","push","newText","Posts","postsMessages","map","p","newPost","React","createRef","onChange","text","updateNewPostActionCreator","current","value","dispatch","ref","onClick","ProfileImage","mainImage","Profile","profileData","DialogsItem","path","dialogsItem","dialog","name","MessageItem","dialogs","newMessageText","messageReducer","newMessage","Dialogs","store","getState","messageData","dialogsElements","d","messageElements","m","dialogsItems","e","target","updateNewMessageTextActionCreator","placeholder","News","Music","Settings","Main","wrapperContent","render","component","App","reducers","combineReducers","dialogsReducer","createStore","rerender","ReactDOM","bind","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3423d9ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2mV1P\",\"header\":\"Profile_header__KdjBu\",\"mainImage\":\"Profile_mainImage__280HU\",\"info\":\"Profile_info__2FFUr\",\"photo\":\"Profile_photo__ZAFjk\",\"about\":\"Profile_about__prC8a\",\"posts\":\"Profile_posts__3nV3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__3yzVk\",\"dialogsItem\":\"Dialogs_dialogsItem__Bjuml\",\"message\":\"Dialogs_message__2fiIf\",\"active\":\"Dialogs_active__3lCsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__1V-A5\",\"active\":\"Navbar_active__2Hgy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3P5Ap\",\"header\":\"Header_header__Xumm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__jao_U\",\"header\":\"Main_header__2NrgS\",\"wrapperContent\":\"Main_wrapperContent__19xOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"News_container__1Kyv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Music_container__LkJhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__1JN2G\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Profile is cached for offline use.\" message.\n              console.log('Profile is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <header className={s.header}>\r\n                <img src=\"https://cdn.silodrome.com/wp-content/uploads/2013/11/Pininfarina-Logo.jpg\" alt=\"\"/>\r\n            </header>\r\n            {/*<nav>*/}\r\n            {/*<div>Main content</div>*/}\r\n            {/*<a href=\"\">Home</a>*/}\r\n            {/*<a href=\"\">New Feed</a>*/}\r\n            {/*<a href=\"\">Messages</a>*/}\r\n            {/*</nav>*/}\r\n        </div>\r\n    )\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.container}>\r\n            <NavLink to=\"/content\" activeClassName={s.active}>Profile</NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n        </nav>\r\n    )\r\n};\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"../Profile.module.css\"\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.info}>\r\n                <div className={s.photo}>\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/62/Schneur_Zalman_of_Liadi.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className={s.about}>\r\n                    <h3>Roman P.</h3>\r\n                    <div>date of birth: 11 september</div>\r\n                    <div>City: Dnipro</div>\r\n                    <div>Education: ODUVS</div>\r\n                    <div>Website:</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"../Profile.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.posts}>\r\n                <div>{props.message}</div><div>{props.likes}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Post;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: \"Hi, how are you\", likesCount: 10},\r\n        {id: 2, message: \"Its my first post\", likesCount: 8},\r\n        {id: 3, message: \"Its my second post\", likesCount: 7},\r\n        {id: 4, message: \"Its my third post\", likesCount: 16},\r\n        {id: 5, message: \"Yo!\", likesCount: 14}\r\n    ],\r\n    newPostText: \"\"\r\n}\r\nconst profileReducer =(state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let post = {\r\n            id: 6,\r\n            message: state.newPostText,\r\n            likesCount: 0\r\n        }\r\n            state.postData.push(post);\r\n            state.newPostText = '';\r\n            return state\r\n        case UPDATE_NEW_POST_TEXT:state.newPostText = action.newText;\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\n\r\nexport const updateNewPostActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\nexport default profileReducer;\r\n\r\n\r\n//store - OOP\r\n\r\n","import React from \"react\";\r\nimport s from \"../Profile.module.css\";\r\nimport Post from \"./Post\"\r\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../../state/profile-reducer\";\r\n\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    let postsMessages = props.postData.map(p => <Post message={p.message} likes={p.likesCount}/>);\r\n\r\n    let newPost = React.createRef();\r\n    //\r\n    let addNewPost = () => { //попробовать ивент\r\n        // let text = newPost.current.value;\r\n        props.dispatch(addPostActionCreator());\r\n        // props.dispatch('')\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPost.current.value;\r\n        let action = updateNewPostActionCreator(text)\r\n        props.dispatch(action)\r\n    }\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.posts}>\r\n                <h3>My posts</h3>\r\n                <div>\r\n                    <textarea onChange={onPostChange}\r\n                              ref={newPost}\r\n                              value={props.newPostText}/>\r\n                    <button onClick={addNewPost}>Send</button>\r\n                </div>\r\n                {postsMessages}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Posts;","import React from \"react\";\r\nimport s from \"../Profile.module.css\"\r\n\r\nconst ProfileImage = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.mainImage}>\r\n                <img src=\"http://hq-wallpapers.ru/wallpapers/8/hq-wallpapers_ru_city_37352_1920x1200.jpg\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileImage;","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport Posts from \"./Posts/Posts\"\r\nimport ProfileImage from \"./ProfileImage/ProfileImage\"\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <ProfileImage/>\r\n            <ProfileInfo/>\r\n            <Posts newPostText={props.newPostText}\r\n                   postData={props.profileData.postData}\r\n                   dispatch={props.dispatch}/>\r\n        </div>\r\n    )\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialogsItem}>\r\n            <div className={s.dialog + ' ' + s.active}>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Messages from \"./Messages/Messages\"\r\n\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    let path = \"/message/\"+props.id\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span >{props.message} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default MessageItem;","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT;'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE;'\r\n\r\n\r\nlet initialState = {\r\n        dialogs: [\r\n            {id: 1, name: 'Roman'},\r\n            {id: 2, name: 'Ruslan'},\r\n            {id: 3, name: 'Yeugene'},\r\n            {id: 4, name: 'Serij'},\r\n            {id: 5, name: 'Petr'},\r\n        ],\r\n        message: [\r\n            {id: 1, message: 'Hi,how are you?', likesCount: 12},\r\n            {id: 2, message: 'Hi,whats up?', likesCount: 15},\r\n            {id: 3, message: 'Hello!?', likesCount: 18},\r\n            {id: 4, message: 'Duuuuuude!', likesCount: 17},\r\n            {id: 5, message: 'Yo!', likesCount: 19},\r\n        ],\r\n        newMessageText: \"\"\r\n    }\r\n\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: 6,\r\n                message: state.newMessageText,\r\n                likesCount: 0\r\n            }\r\n            state.message.push(newMessage);\r\n            state.newMessageText = '';\r\n            return state\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            state.newMessageText = action.message;\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default messageReducer\r\n\r\nexport const sendMessageActionCreator = () => ({type: SEND_MESSAGE})\r\n\r\nexport const updateNewMessageTextActionCreator = (message) =>\r\n    ({type: UPDATE_NEW_MESSAGE_TEXT, message: message})\r\n\r\n\r\n\r\n// rerender(store)\r\n\r\n\r\n//store - OOP\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Messages from \"./Messages/Messages\"\r\nimport DialogsItem from \"./DialogsItem\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport {\r\n    sendMessageActionCreator,\r\n    updateNewMessageTextActionCreator,\r\n} from \"../../../state/message-reducer\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    debugger\r\n    let state = props.store.getState().messageData\r\n    let onSendMessageClick = () => {\r\n          props.store.dispatch(sendMessageActionCreator())\r\n    }\r\n    let onNewMessageChange = (e) => {\r\n        debugger\r\n        let message = e.target.value\r\n        props.store.dispatch(updateNewMessageTextActionCreator(message))\r\n\r\n    }\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messageElements = state.message.map(m => <MessageItem message={m.message}/>)\r\n    let newMessageText = state.newMessageText\r\n\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n                {/*<Messages message={props.state.message}/>*/}\r\n            </div>\r\n            <div>\r\n                <div>{messageElements}</div>\r\n                <div><textarea value={newMessageText}\r\n                               onChange={onNewMessageChange}\r\n                               placeholder='Enter your message'>\r\n\r\n                    </textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onSendMessageClick}>send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.container}>News</div>\r\n    )\r\n};\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.container}>Music</div>\r\n    )\r\n};\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.container}>Settings</div>\r\n    )\r\n};\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./Main.module.css\"\r\nimport Navbar from \"./Navbar/Navbar\"\r\nimport Profile from \"./Profile/Profile\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport News from \"./News/News\";\r\nimport Music from \"./Music/Music\"\r\nimport Settings from \"./Settings/Settings\"\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.container}>\r\n                <Navbar/>\r\n                <div className={s.wrapperContent}>\r\n                    <Route path='/dialogs' render={() => <Dialogs store={props.store} />}/>\r\n                    <Route path='/content' render={() => <Profile profileData={props.state.profileData}\r\n                                                                  dispatch={props.dispatch}\r\n                                                                  newPostText={props.state.profileData.newPostText}/>}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n};\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\"\nimport Main from \"./components/Main/Main\"\n\n\nconst App = (props) => {\n\n    return (\n        <div className=\"wrapper\">\n            <div><Header/></div>\n            <div><Main state={props.state} dispatch={props.dispatch} store={props.store}/></div>\n        </div>\n\n\n    );\n};\n\nexport default App;\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./message-reducer\"\r\n\r\nlet reducers = combineReducers({\r\n    profileData : profileReducer,\r\n    messageData : dialogsReducer\r\n})\r\nlet store = createStore(reducers);\r\n\r\n\r\nexport default store","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './state/redux-store';\n\nexport * from \"react-router-dom\";\n\nlet rerender = (state) => {\n    ReactDOM.render(<App dispatch={store.dispatch.bind(store)}\n                         state={state}\n                         store={store}/>, document.getElementById('root'));\n}\nrerender(store.getState())\n\nstore.subscribe( () => {\n    let state = store.getState();\n    rerender(state)\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}