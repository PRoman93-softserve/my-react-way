{"version":3,"sources":["components/Main/Profile/Profile.module.css","components/Main/Dialogs/Dialogs.module.css","components/Main/Navbar/Navbar.module.css","components/Header/Header.module.css","components/Main/Main.module.css","components/Main/News/News.module.css","components/Main/Music/Music.module.css","components/Main/Settings/Settings.module.css","components/Header/Header.js","components/Main/Navbar/Navbar.jsx","components/Main/Profile/ProfileInfo/ProfileInfo.jsx","components/Main/Profile/Posts/Post.jsx","components/Main/Profile/Posts/Posts.jsx","components/Main/Profile/ProfileImage/ProfileImage.jsx","components/Main/Profile/Profile.jsx","components/Main/Dialogs/DialogsItem.jsx","components/Main/Dialogs/MessageItem.jsx","components/Main/Dialogs/Dialogs.jsx","components/Main/News/News.jsx","components/Main/Music/Music.jsx","components/Main/Settings/Settings.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","state/state.js","index.js"],"names":["module","exports","Header","className","s","container","header","src","alt","Navbar","to","activeClassName","active","ProfileInfo","info","photo","about","Post","props","posts","message","likesCount","Posts","postsMessages","postData","map","p","likes","action","placeholder","ProfileImage","mainImage","Profile","console","log","DialogsItem","path","state","dialogsItem","dialog","MessageItem","id","Dialogs","dialogsElements","d","name","messageElements","m","dialogsItems","News","Music","Settings","Main","wrapperContent","render","dialogs","component","App","messageData","profileData","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a61d5ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2mV1P\",\"header\":\"Profile_header__KdjBu\",\"mainImage\":\"Profile_mainImage__280HU\",\"info\":\"Profile_info__2FFUr\",\"photo\":\"Profile_photo__ZAFjk\",\"about\":\"Profile_about__prC8a\",\"posts\":\"Profile_posts__3nV3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__3yzVk\",\"dialogsItem\":\"Dialogs_dialogsItem__Bjuml\",\"message\":\"Dialogs_message__2fiIf\",\"active\":\"Dialogs_active__3lCsN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__1V-A5\",\"active\":\"Navbar_active__2Hgy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3P5Ap\",\"header\":\"Header_header__Xumm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__jao_U\",\"header\":\"Main_header__2NrgS\",\"wrapperContent\":\"Main_wrapperContent__19xOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"News_container__1Kyv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Music_container__LkJhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__1JN2G\"};","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <header className={s.header}>\r\n                <img src=\"https://cdn.silodrome.com/wp-content/uploads/2013/11/Pininfarina-Logo.jpg\" alt=\"\"/>\r\n            </header>\r\n            {/*<nav>*/}\r\n            {/*<div>Main content</div>*/}\r\n            {/*<a href=\"\">Home</a>*/}\r\n            {/*<a href=\"\">New Feed</a>*/}\r\n            {/*<a href=\"\">Messages</a>*/}\r\n            {/*</nav>*/}\r\n        </div>\r\n    )\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.container}>\r\n            <NavLink to=\"/content\" activeClassName={s.active}>Profile</NavLink>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n        </nav>\r\n    )\r\n};\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"../Profile.module.css\"\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.info}>\r\n                <div className={s.photo}>\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/62/Schneur_Zalman_of_Liadi.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className={s.about}>\r\n                    <h3>Roman P.</h3>\r\n                    <div>date of birth: 11 september</div>\r\n                    <div>City: Dnipro</div>\r\n                    <div>Education: ODUVS</div>\r\n                    <div>Website:</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"../Profile.module.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={s.container}>\r\n            <div className={s.posts}>\r\n                <div>{props.message} {props.likesCount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Post;","import React from \"react\";\r\nimport s from \"../Profile.module.css\";\r\nimport Post from \"./Post\"\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    let postsMessages = props.postData.map(p => <Post message={p.message} likes={p.likesCount}/>);\r\n\r\n    return (\r\n\r\n\r\n        <div className={s.container}>\r\n\r\n            <div className={s.posts}>\r\n                <h3>My posts</h3>\r\n                <form action=\"\">\r\n                    <textarea placeholder=\"your news\"></textarea>\r\n                    <button>Send</button>\r\n                </form>\r\n                {postsMessages}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Posts;","import React from \"react\";\r\nimport s from \"../Profile.module.css\"\r\n\r\nconst ProfileImage = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.mainImage}>\r\n                <img src=\"http://hq-wallpapers.ru/wallpapers/8/hq-wallpapers_ru_city_37352_1920x1200.jpg\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileImage;","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport Posts from \"./Posts/Posts\"\r\nimport ProfileImage from \"./ProfileImage/ProfileImage\"\r\n\r\nconst Profile = (props) => {\r\n    console.log(props)\r\n    //\r\n    // let postData = [\r\n    //     {id: 1, message: \"Hi, how are you\", likesCount: \"10\"},\r\n    //     {id: 2, message: \"Its my first post\", likesCount: \"8\"},\r\n    //     {id: 2, message: \"Its my second post\", likesCount: \"7\"},\r\n    //     {id: 2, message: \"Its my third post\", likesCount: \"16\"},\r\n    //     {id: 3, message: \"Yo\", likesCount: \"14\"}\r\n    // ];\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <ProfileImage/>\r\n            <ProfileInfo/>\r\n            <Posts postData={props.postData}/>\r\n        </div>\r\n    )\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n\r\n    let path = \"/dialogs/\" + props.state;\r\n    return (\r\n        <div className={s.dialogsItem}>\r\n            <div className={s.dialog + ' ' + s.active}>\r\n                <NavLink to={path}>{props.state}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Messages from \"./Messages/Messages\"\r\n\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    let path = \"/message/\"+props.id\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span >{props.message} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Messages from \"./Messages/Messages\"\r\nimport DialogsItem from \"./DialogsItem\";\r\nimport MessageItem from \"./MessageItem\";\r\n\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n// let dialogs = [\r\n//     {id: 1, name: 'Roman'},\r\n//     {id: 2, name: 'Ruslan'},\r\n//     {id: 3, name: 'Yeugene'},\r\n//     {id: 4, name: 'Serij'},\r\n//     {id: 5, name: 'Petr'},\r\n// ]\r\n// let message = [\r\n//     {id: 1, message: 'Hi,how are you?', likesCount: 12},\r\n//     {id: 2, message: 'Hi,whats up?', likesCount: 15},\r\n//     {id: 3, message: 'Hello!?', likesCount: 18},\r\n//     {id: 4, message: 'Duuuuuude!', likesCount: 17},\r\n//     {id: 5, message: 'Yo!', likesCount: 19},\r\n// ]\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n\r\n\r\n    let dialogsElements = props.message.map(d => <DialogsItem name={d.name} id={d.id} />)\r\n    let messageElements = props.message.map(m => <MessageItem message={m.message}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n                {/*<Messages message={props.state.message}/>*/}\r\n            </div>\r\n            <div>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.container}>News</div>\r\n    )\r\n};\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.container}>Music</div>\r\n    )\r\n};\r\nexport default Music;","import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.container}>Settings</div>\r\n    )\r\n};\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./Main.module.css\"\r\nimport Navbar from \"./Navbar/Navbar\"\r\nimport Profile from \"./Profile/Profile\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport News from \"./News/News\";\r\nimport Music from \"./Music/Music\"\r\nimport Settings from \"./Settings/Settings\"\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nconst Main = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.container}>\r\n                <Navbar/>\r\n                <div className={s.wrapperContent}>\r\n                    <Route path='/dialogs' render={ () => <Dialogs  dialogs={props.state.dialogs}\r\n                                                                    message={props.state.message}/>}/>\r\n                    <Route path='/content' render={ () =><Profile postData={props.postData}/>}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n};\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\"\nimport Main from \"./components/Main/Main\"\n\n\nconst App = (props) => {\n    //console.log(props.state)\n    return (\n        <div className=\"wrapper\">\n            <div><Header/></div>\n            <div><Main messageData={props.state.messageData} postData={props.state.profileData}/></div>\n        </div>\n\n\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Profile is cached for offline use.\" message.\n              console.log('Profile is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let state = {\r\n\r\n    profileData: {\r\n\r\n        postData: [\r\n            {id: 1, message: \"Hi, how are you\", likesCount: \"10\"},\r\n            {id: 2, message: \"Its my first post\", likesCount: \"8\"},\r\n            {id: 2, message: \"Its my second post\", likesCount: \"7\"},\r\n            {id: 2, message: \"Its my third post\", likesCount: \"16\"},\r\n            {id: 3, message: \"Yo\", likesCount: \"14\"}\r\n        ]\r\n    },\r\n    messageData : {\r\n        dialogs: [\r\n            {id: 1, name: 'Roman'},\r\n            {id: 2, name: 'Ruslan'},\r\n            {id: 3, name: 'Yeugene'},\r\n            {id: 4, name: 'Serij'},\r\n            {id: 5, name: 'Petr'},\r\n        ],\r\n        message: [\r\n            {id: 1, message: 'Hi,how are you?', likesCount: 12},\r\n            {id: 2, message: 'Hi,whats up?', likesCount: 15},\r\n            {id: 3, message: 'Hello!?', likesCount: 18},\r\n            {id: 4, message: 'Duuuuuude!', likesCount: 17},\r\n            {id: 5, message: 'Yo!', likesCount: 19},\r\n        ]\r\n    }\r\n};\r\n\r\nexport default state\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport state from \"./state/state\"\nexport * from \"react-router-dom\";\n\n//\n// let dialogs= [\n//     {id: 1, name: 'Roman'},\n//     {id: 2, name: 'Ruslan'},\n//     {id: 3, name: 'Yeugene'},\n//     {id: 4, name: 'Serij'},\n//     {id: 5, name: 'Petr'},\n// ]\n//     let message = [\n//     {id: 1, message: 'Hi,how are you?', likesCount: 12},\n//     {id: 2, message: 'Hi,whats up?', likesCount: 15},\n//     {id: 3, message: 'Hello!?', likesCount: 18},\n//     {id: 4, message: 'Duuuuuude!', likesCount: 17},\n//     {id: 5, message: 'Yo!', likesCount: 19},\n// ]\n//\n//     let postData = [\n//     {id: 1, message: \"Hi, how are you\", likesCount: \"10\"},\n//     {id: 2, message: \"Its my first post\", likesCount: \"8\"},\n//     {id: 2, message: \"Its my second post\", likesCount: \"7\"},\n//     {id: 2, message: \"Its my third post\", likesCount: \"16\"},\n//     {id: 3, message: \"Yo\", likesCount: \"14\"}\n// ]\n\n    ReactDOM.render(<App state={state}/>, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}