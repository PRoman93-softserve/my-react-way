{"version":3,"sources":["components/Header.module.css","components/Main.module.css","components/Navbar.module.css","components/Dialogs.module.css","components/Header.js","components/Navbar.jsx","components/Content.jsx","components/Dialogs.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js","components/Content.module.css"],"names":["module","exports","Header","className","s","container","header","src","alt","Navbar","href","Content","mainImage","info","photo","about","posts","action","placeholder","Dialogs","Main","wrapperContent","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,UAAY,wBAAwB,OAAS,uB,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,6B,yLCiBfC,EAfA,WACX,OACI,yBAAKC,UAAWC,IAAEC,WACd,4BAAQF,UAAWC,IAAEE,QACjB,yBAAKC,IAAI,4EAA4EC,IAAI,Q,kCCO1FC,EAXA,WACX,OACI,yBAAKN,UAAWC,IAAEC,WACd,uBAAGK,KAAK,YAAR,WACA,uBAAGA,KAAK,YAAR,YACA,mCACA,oCACA,yC,gBC2BGC,EAlCC,WACZ,OACI,yBAAKR,UAAWC,IAAEC,WACd,yBAAKF,UAAWC,IAAEQ,WAAW,yBACzBL,IAAI,iFAAiFC,IAAI,MAC7F,yBAAKL,UAAWC,IAAES,MACd,yBAAKV,UAAWC,IAAEU,OACd,yBAAKP,IAAI,kFAAkFC,IAAI,MAEnG,yBAAKL,UAAWC,IAAEW,OACd,wCACA,4DACA,6CACA,iDACA,2CAGR,yBAAKZ,UAAWC,IAAEY,OACd,wCACA,0BAAMC,OAAO,IACT,8BAAUC,YAAY,cACtB,yCAGJ,mCACA,yCACA,2CACA,0CACA,0CACA,6C,iBCxBDC,EALC,WACZ,OACI,yBAAKhB,UAAWC,IAAEC,WAAlB,Y,cCiBOe,EAfF,WACT,OACI,kBAAC,IAAD,KACI,yBAAKjB,UAAWC,IAAEC,WACd,kBAAC,EAAD,MAEA,yBAAKF,UAAWC,IAAEiB,gBAClB,kBAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWJ,IAClC,kBAAC,IAAD,CAAOG,KAAK,WAAWC,UAAWZ,QCMnCa,EAbH,WACR,OACI,yBAAKrB,UAAU,WACX,6BAAK,kBAAC,EAAD,OACL,6BAAK,kBAAC,EAAD,SCAGsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,20BAOIC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBElInBvC,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,UAAY,2BAA2B,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,0B","file":"static/js/main.e2a1cc9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1G75A\",\"header\":\"Header_header__2Fh6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__36sjL\",\"header\":\"Main_header__INJOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__3lGF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__ojEBU\"};","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <header className={s.header}>\r\n                <img src=\"https://cdn.silodrome.com/wp-content/uploads/2013/11/Pininfarina-Logo.jpg\" alt=\"\"/>\r\n            </header>\r\n            {/*<nav>*/}\r\n            {/*<div>Main content</div>*/}\r\n            {/*<a href=\"\">Home</a>*/}\r\n            {/*<a href=\"\">New Feed</a>*/}\r\n            {/*<a href=\"\">Messages</a>*/}\r\n            {/*</nav>*/}\r\n        </div>\r\n    )\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport s from \"./Navbar.module.css\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.container}>\r\n            <a href=\"/content\">Profile</a>\r\n            <a href=\"/dialogs\">Messages</a>\r\n            <a>News</a>\r\n            <a>Music</a>\r\n            <a>Settings</a>\r\n        </nav>\r\n    )\r\n};\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Content.module.css\"\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.mainImage}><img\r\n                src=\"http://hq-wallpapers.ru/wallpapers/8/hq-wallpapers_ru_city_37352_1920x1200.jpg\" alt=\"\"/></div>\r\n            <div className={s.info}>\r\n                <div className={s.photo}>\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/62/Schneur_Zalman_of_Liadi.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className={s.about}>\r\n                    <h3>Roman P.</h3>\r\n                    <div>date of birth: 11 september</div>\r\n                    <div>City: Dnipro</div>\r\n                    <div>Education: ODUVS</div>\r\n                    <div>Website:</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                <h3>My posts</h3>\r\n                <form action=\"\">\r\n                    <textarea placeholder=\"your news\"></textarea>\r\n                    <button>Send</button>\r\n                </form>\r\n\r\n                <div>de</div>\r\n                <div>new post</div>\r\n                <div>new post 2</div>\r\n                <div>my post 1</div>\r\n                <div>my post 2</div>\r\n                <div>my post 3</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Content;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={s.container}>Dialogs</div>\r\n    )\r\n};\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from \"./Main.module.css\"\r\nimport Navbar from \"./Navbar\"\r\nimport Content from \"./Content\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.container}>\r\n                <Navbar/>\r\n                {/*<Content/>*/}\r\n                <div className={s.wrapperContent}>\r\n                <Route path=\"/dialogs\" component={Dialogs}/>\r\n                <Route path=\"/content\" component={Content}/>\r\n                {/*<Dialogs/>*/}\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n};\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\"\nimport Main from \"./components/Main\"\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\n\n\nconst App = () => {\n    return (\n        <div className=\"wrapper\">\n            <div><Header/></div>\n            <div><Main/></div>\n        </div>\n\n\n    );\n};\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nexport * from \"react-router-dom\";\n\n    ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__3TpkE\",\"header\":\"Content_header__lBFaR\",\"mainImage\":\"Content_mainImage__YfFGh\",\"info\":\"Content_info__3T8mu\",\"photo\":\"Content_photo__3Af7M\",\"about\":\"Content_about__2OKs8\",\"posts\":\"Content_posts__1-C5x\"};"],"sourceRoot":""}